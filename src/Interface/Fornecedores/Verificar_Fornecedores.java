/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Fornecedores;

import controle.FabricanteDAO;
import controle.FornecedorDAO;
import entidades.Fabricante;
import entidades.Fornecedor;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author seven
 */
public class Verificar_Fornecedores extends javax.swing.JFrame {

    FornecedorDAO fornecedores;
    FabricanteDAO fabricantes;

    /**
     * Creates new form Verificar_Fornecedores
     */

    public void atualizar() {
        DefaultTableModel tabela_aux = (DefaultTableModel) tabela_fornecedores.getModel();
        int max = tabela_aux.getRowCount();
        for (int i = 0; i < max; i++) {
            tabela_aux.removeRow(0);
        }

        java.util.List<Fornecedor> listTeste = fornecedores.listarTodos();
        for (Fornecedor a : listTeste) {
            Object[] linha = {a.getId(), a.getNome(), a.getSobrenome(), a.getTelefone(), a.getEmail(), a.getFk_fabricante()};
            tabela_aux.addRow(linha);
        }
    }

    public Verificar_Fornecedores(FornecedorDAO fornecedordao, FabricanteDAO fabricantedao) {
        fornecedores = fornecedordao;
        fabricantes = fabricantedao;
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        setTitle("Fornecedores");
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);

        DefaultTableModel tabela_aux = (DefaultTableModel) tabela_fabricante.getModel();
        int max = tabela_aux.getRowCount();
        for (int i = 0; i < max; i++) {
            tabela_aux.removeRow(0);
        }

        List<Fabricante> listTeste = fabricantes.listarTodos();
        for (Fabricante a : listTeste) {
            Object[] linha = {a.getId(), a.getNome()};
            tabela_aux.addRow(linha);
        }

        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowActivated(WindowEvent e) {
                atualizar();
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela_fornecedores = new javax.swing.JTable();
        visualizar = new javax.swing.JButton();
        fechar = new javax.swing.JButton();
        cadastrar = new javax.swing.JButton();
        excluir = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabela_fabricante = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Fornecedores");

        tabela_fornecedores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nome", "Sobrenome", "Telefone", "Email", "Fabricante"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabela_fornecedores);

        visualizar.setText("Visualizar");
        visualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visualizarActionPerformed(evt);
            }
        });

        fechar.setText("Fechar");
        fechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fecharActionPerformed(evt);
            }
        });

        cadastrar.setText("Cadastrar");
        cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarActionPerformed(evt);
            }
        });

        excluir.setText("Excluir");
        excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirActionPerformed(evt);
            }
        });

        tabela_fabricante.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Fabricante"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabela_fabricante);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(visualizar)
                .addGap(18, 18, 18)
                .addComponent(cadastrar)
                .addGap(18, 18, 18)
                .addComponent(excluir)
                .addGap(18, 18, 18)
                .addComponent(fechar)
                .addGap(191, 191, 191))
            .addGroup(layout.createSequentialGroup()
                .addGap(322, 322, 322)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(visualizar)
                    .addComponent(fechar)
                    .addComponent(cadastrar)
                    .addComponent(excluir))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fecharActionPerformed
        dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_fecharActionPerformed

    private void visualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visualizarActionPerformed
        int linha = tabela_fornecedores.getSelectedRow();
        if (linha != -1) {
            DefaultTableModel tabela1 = (DefaultTableModel) tabela_fornecedores.getModel();
            Long codigo = (Long) tabela1.getValueAt(linha, 0);
            Fornecedor fornecedor = fornecedores.buscar(codigo);
            Visualizar_Fornecedor Ver = new Visualizar_Fornecedor(fornecedor,fornecedores);
            Ver.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this.getContentPane(), "Selecione uma linha.");
        }

    }//GEN-LAST:event_visualizarActionPerformed

    private void cadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarActionPerformed
        int linha = tabela_fabricante.getSelectedRow();
        if (linha != -1) {
            DefaultTableModel tabela1 = (DefaultTableModel) tabela_fabricante.getModel();
            long codigo = (long) tabela1.getValueAt(linha, 0);
            Cadastrar_fornecedor Ver = new Cadastrar_fornecedor(codigo,fornecedores);
        Ver.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this.getContentPane(), "Selecione uma linha em fabricante.");
        }
        atualizar();

    }//GEN-LAST:event_cadastrarActionPerformed

    private void excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirActionPerformed
        int linha = tabela_fornecedores.getSelectedRow();
        if (linha != -1) {
            DefaultTableModel tabela1 = (DefaultTableModel) tabela_fornecedores.getModel();
            Long codigo = (Long) tabela1.getValueAt(linha, 0);
            System.out.println("Excluiu Fornecedor? "+fornecedores.remover(codigo));
            atualizar();
        }else{
            JOptionPane.showMessageDialog(this.getContentPane(),"Selecione uma linha.");
        }
    }//GEN-LAST:event_excluirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cadastrar;
    private javax.swing.JButton excluir;
    private javax.swing.JButton fechar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tabela_fabricante;
    private javax.swing.JTable tabela_fornecedores;
    private javax.swing.JButton visualizar;
    // End of variables declaration//GEN-END:variables
}
